/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ChainlinkFeedPriceOracleFactory,
  ChainlinkFeedPriceOracleFactoryInterface,
} from "../../../../../contracts/oracle/price/chainlink/ChainlinkFeedPriceOracleFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Implementation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "child",
        type: "address",
      },
    ],
    name: "NewChild",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data_",
        type: "bytes",
      },
    ],
    name: "createChild",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "feed",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "staleAfter",
            type: "uint256",
          },
        ],
        internalType: "struct ChainlinkFeedPriceOracleConfig",
        name: "config_",
        type: "tuple",
      },
    ],
    name: "createChildTyped",
    outputs: [
      {
        internalType: "contract ChainlinkFeedPriceOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "maybeChild_",
        type: "address",
      },
    ],
    name: "isChild",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001961001e565b6100de565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100dc576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b610db3806100ed6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631e232aaf146100465780632ea72a4914610083578063fc91a89714610096575b600080fd5b6100596100543660046103e9565b6100df565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b610059610091366004610423565b610137565b6100cf6100a43660046104f2565b73ffffffffffffffffffffffffffffffffffffffff1660009081526033602052604090205460ff1690565b604051901515815260200161007a565b60006101318260405160200161011d9190815173ffffffffffffffffffffffffffffffffffffffff1681526020918201519181019190915260400190565b604051602081830303815290604052610137565b92915050565b600061014161027d565b600061014c836102f0565b73ffffffffffffffffffffffffffffffffffffffff811660009081526033602052604090205490915060ff16156101e4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4455504c49434154455f4348494c44000000000000000000000000000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660008181526033602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558151338152908101929092527f7da70c4e5387d7038610b79ca7d304caaef815826e51e67cf247135387a79bce910160405180910390a1905061027860018055565b919050565b6002600154036102e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016101db565b6002600155565b6000818060200190518101906103069190610516565b6040516103129061035f565b815173ffffffffffffffffffffffffffffffffffffffff16815260209182015191810191909152604001604051809103906000f080158015610358573d6000803e3d6000fd5b5092915050565b61082d8061055183390190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156103be576103be61036c565b60405290565b73ffffffffffffffffffffffffffffffffffffffff811681146103e657600080fd5b50565b6000604082840312156103fb57600080fd5b61040361039b565b823561040e816103c4565b81526020928301359281019290925250919050565b60006020828403121561043557600080fd5b813567ffffffffffffffff8082111561044d57600080fd5b818401915084601f83011261046157600080fd5b8135818111156104735761047361036c565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156104b9576104b961036c565b816040528281528760208487010111156104d257600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561050457600080fd5b813561050f816103c4565b9392505050565b60006040828403121561052857600080fd5b61053061039b565b825161053b816103c4565b8152602092830151928101929092525091905056fe60c060405234801561001057600080fd5b5060405161082d38038061082d83398101604081905261002f91610092565b80516001600160a01b039081166080526020808301805160a052604080513381528551909416928401929092525182820152517fd805b17f9f53cd312715f3a3479f5ec20737acdf90918bf27d8e8fc3345faa4d9181900360600190a150610103565b6000604082840312156100a457600080fd5b604080519081016001600160401b03811182821017156100d457634e487b7160e01b600052604160045260246000fd5b60405282516001600160a01b03811681146100ee57600080fd5b81526020928301519281019290925250919050565b60805160a0516106fb6101326000396000818160b2015260fc015260008181604b015260db01526106fb6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806337a7b7d814610046578063a035b1fe14610097578063d2e9db49146100ad575b600080fd5b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61009f6100d4565b60405190815260200161008e565b61009f7f000000000000000000000000000000000000000000000000000000000000000081565b60006101207f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610125565b905090565b60008060008473ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610175573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101999190610473565b509350509250506000821361020f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4d494e5f424153455f505249434500000000000000000000000000000000000060448201526064015b60405180910390fd5b8361021a82426104f2565b10610281576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f5354414c455f50524943450000000000000000000000000000000000000000006044820152606401610206565b6103058573ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f39190610505565b60ff166102ff84610310565b90610380565b925050505b92915050565b60008082121561037c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f53616665436173743a2076616c7565206d75737420626520706f7369746976656044820152606401610206565b5090565b60008082601203610394578391505061030a565b82601211156103c0575060128290036103b86103b182600a61064f565b85906103f9565b91505061030a565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee82016103ef81600a61064f565b6103b8908561068a565b60008260000361040b5750600061030a565b8282028284828161041e5761041e61065b565b040361042a578061044c565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5b949350505050565b805169ffffffffffffffffffff8116811461046e57600080fd5b919050565b600080600080600060a0868803121561048b57600080fd5b61049486610454565b94506020860151935060408601519250606086015191506104b760808701610454565b90509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561030a5761030a6104c3565b60006020828403121561051757600080fd5b815160ff8116811461052857600080fd5b9392505050565b600181815b8085111561058857817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561056e5761056e6104c3565b8085161561057b57918102915b93841c9390800290610534565b509250929050565b60008261059f5750600161030a565b816105ac5750600061030a565b81600181146105c257600281146105cc576105e8565b600191505061030a565b60ff8411156105dd576105dd6104c3565b50506001821b61030a565b5060208310610133831016604e8410600b841016171561060b575081810a61030a565b610615838361052f565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115610647576106476104c3565b029392505050565b60006105288383610590565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826106c0577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea2646970667358221220ac43f621b5f93ccd856d29747d9b13beae41e7800aafa4d22f5102ea685b912464736f6c63430008110033a26469706673582212204693812a39f2979f4a59171e64c2d4401317031922b3b3e4b08240ba326c943764736f6c63430008110033";

type ChainlinkFeedPriceOracleFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChainlinkFeedPriceOracleFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChainlinkFeedPriceOracleFactory__factory extends ContractFactory {
  constructor(...args: ChainlinkFeedPriceOracleFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ChainlinkFeedPriceOracleFactory> {
    return super.deploy(
      overrides || {}
    ) as Promise<ChainlinkFeedPriceOracleFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ChainlinkFeedPriceOracleFactory {
    return super.attach(address) as ChainlinkFeedPriceOracleFactory;
  }
  override connect(signer: Signer): ChainlinkFeedPriceOracleFactory__factory {
    return super.connect(signer) as ChainlinkFeedPriceOracleFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChainlinkFeedPriceOracleFactoryInterface {
    return new utils.Interface(
      _abi
    ) as ChainlinkFeedPriceOracleFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChainlinkFeedPriceOracleFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ChainlinkFeedPriceOracleFactory;
  }
}
